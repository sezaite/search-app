{"version":3,"sources":["components/helpers/sendData.js","components/ArticleCard.js","components/List.js","components/helpers/isValidKeyword.js","components/helpers/getArticles.js","components/Loader.js","components/Search.js","App.js","reportWebVitals.js","index.js"],"names":["sendData","data","url","postUrl","axios","post","then","res","console","log","catch","err","ArticleCard","date","title","description","img","articleDetails","className","style","backgroundImage","onClick","to","pathname","target","textDecoration","text","maxLine","ellipsis","trimRight","basedOn","List","map","article","index","publishedAt","image","isValidInputLength","input","split","length","keywords","a","keywordsArr","join","get","getArticles","Loader","Search","useState","articles","setArticles","isFetching","setIsFetching","setKeywords","errorMessage","setErrorMessage","search","e","preventDefault","RegExp","test","action","type","placeholder","onChange","value","icon","faSearch","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qSAYeA,MAVf,SAAkBC,EAAMC,GACpB,IAAMC,EAAO,gCAA4BD,GACzCE,IAAMC,KAAKF,EAASF,GAAMK,MAAK,SAAAC,GAC3BC,QAAQC,IAAIF,MACbG,OAAM,SAAAC,GACLH,QAAQC,IAAIE,O,OCwBLC,MA1Bf,YAA8D,IAAvCC,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,YAAaC,EAAY,EAAZA,IAAKd,EAAO,EAAPA,IAC5Ce,EAAiB,CACnBJ,OAAMC,QAAOC,cAAab,OAE9B,OAEI,qBAAKgB,UAAU,eAAeC,MAAO,CAAEC,gBAAgB,OAAD,OAASJ,EAAT,MAAmBK,QAAS,kBAAMrB,EAASiB,EAAgB,aAAjH,SACI,qBAAKC,UAAU,kBAAf,SACI,eAAC,IAAD,CAAMI,GAAI,CAAEC,SAAUrB,GAAOsB,OAAO,SAASL,MAAO,CAAEM,eAAgB,QAAtE,UACI,6BAAKX,IACL,6BAAKD,IACL,cAAC,IAAD,CACIK,UAAU,gBACVQ,KAAMX,EACNY,QAAQ,IACRC,SAAS,MACTC,WAAS,EACTC,QAAQ,oBCRjBC,MAZf,YAAyB,IAAT9B,EAAQ,EAARA,KACZ,OACI,qBAAKiB,UAAU,qBAAf,SACI,qBAAKA,UAAU,MAAf,SACKjB,EAAK+B,KAAI,SAACC,EAASC,GAAV,OACN,cAAC,EAAD,CAAyBrB,KAAMoB,EAAQE,YAAarB,MAAOmB,EAAQnB,MAAOC,YAAakB,EAAQlB,YAAaC,IAAKiB,EAAQG,MAAOlC,IAAK+B,EAAQ/B,KAA3HgC,WCF/B,SAASG,EAAmBC,GAE/B,OADUA,EAAMC,MAAM,IACXC,OAAS,G,4CCLxB,WAA2BC,GAA3B,iBAAAC,EAAA,6DACUC,EAAcF,EAASG,KAAK,KADtC,SAEsBxC,IAAMyC,IAAN,2CAA8CF,EAA9C,0DAFtB,cAEUpC,EAFV,yBAGWA,EAAIN,MAHf,4C,sBAMe6C,M,4CCEAC,MARf,WACI,OACI,+CC+DOC,MA1Df,WACI,MAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAAgCJ,mBAAS,IAAzC,mBAAOR,EAAP,KAAiBa,EAAjB,KACA,EAAwCL,mBAAS,IAAjD,mBAAOM,EAAP,KAAqBC,EAArB,KAEMC,EAAM,uCAAG,WAAOC,GAAP,SAAAhB,EAAA,yDACXgB,EAAEC,iBACFN,GAAc,GACG,KAAbZ,EAHO,uBAIPe,EAAgB,+BAChBH,GAAc,GALP,6BHfcf,EGuBHG,EHtBJ,IAAImB,OAAO,oBACZC,KAAKvB,GGaX,wBASPkB,EAAgB,sBAChBH,GAAc,GAVP,8BAaNhB,EAAmBI,GAbb,wBAcPe,EAAgB,qBAChBH,GAAc,GAfP,2BAkBXP,EAAYL,EAASF,MAAM,MAAMjC,MAAK,SAAAC,GAClCiD,EAAgB,IAChBF,EAAY,IACZH,EAAY5C,EAAI2C,UAChBG,GAAc,MACf3C,OAAM,SAAAC,GACLH,QAAQC,IAAIE,GACZ0C,GAAc,GACdG,EAAgB,gCAGpBxD,EAAS,CAAEyC,YAAY,UA7BZ,kCHfZ,IAA0BH,IGed,OAAH,sDAgCZ,OACI,sBAAKpB,UAAU,gBAAf,UACI,sBAAKA,UAAU,aAAf,UACI,qDACkB,KAAjBqC,GAAuB,oBAAIrC,UAAU,YAAd,SAA2BqC,IACnD,uBAAMO,OAAO,GAAb,UACI,sBAAK5C,UAAU,QAAf,UACI,uBAAO6C,KAAK,OAAOC,YAAY,mCAAmCC,SAAU,SAAAP,GAAC,OAAIJ,EAAYI,EAAElC,OAAO0C,QAAQA,MAAOzB,IACrH,cAAC,IAAD,CAAiB0B,KAAMC,IAAUlD,UAAU,YAE/C,wBAAQA,UAAU,MAAMG,QAASoC,EAAjC,0BAIPL,GAA2B,KAAbX,EAAkB,cAAC,EAAD,IAAa,cAAC,EAAD,CAAMxC,KAAMiD,Q,OC1CvDmB,MAff,WACE,OACE,cAAC,IAAD,UACE,qBAAKnD,UAAU,MAAf,SACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOoD,OAAK,EAACC,KAAK,cAAlB,SACE,cAAC,EAAD,aCEGC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBpE,MAAK,YAAkD,IAA/CqE,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.bb302523.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nfunction sendData(data, url) {\r\n    const postUrl = `http://localhost:9000/${url}`;\r\n    axios.post(postUrl, data).then(res => {\r\n        console.log(res)\r\n    }).catch(err => {\r\n        console.log(err);\r\n    });\r\n    return;\r\n}\r\n\r\nexport default sendData\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport LinesEllipsis from 'react-lines-ellipsis';\r\nimport sendData from './helpers/sendData';\r\n\r\nfunction ArticleCard({ date, title, description, img, url }) {\r\n    const articleDetails = {\r\n        date, title, description, url\r\n    }\r\n    return (\r\n\r\n        <div className=\"article-card\" style={{ backgroundImage: `url(${img})` }} onClick={() => sendData(articleDetails, 'articles')}>\r\n            <div className=\"article-wrapper\" >\r\n                <Link to={{ pathname: url }} target=\"_blank\" style={{ textDecoration: \"none\" }}>\r\n                    <h3>{title}</h3>\r\n                    <h6>{date}</h6>\r\n                    <LinesEllipsis\r\n                        className=\"ellipsis-text\"\r\n                        text={description}\r\n                        maxLine='4'\r\n                        ellipsis='...'\r\n                        trimRight\r\n                        basedOn='letters'\r\n                    >\r\n                    </LinesEllipsis>\r\n                </Link>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default ArticleCard\r\n","import ArticleCard from './ArticleCard';\r\n\r\nfunction List({ data }) {\r\n    return (\r\n        <div className=\"articles-container\">\r\n            <div className=\"row\">\r\n                {data.map((article, index) => (\r\n                    <ArticleCard key={index} date={article.publishedAt} title={article.title} description={article.description} img={article.image} url={article.url} />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default List\r\n","export function isValidCharacter(input) {\r\n    const charactersRgx = new RegExp(\"^[a-zA-Z0-9_ ]*$\");\r\n    return charactersRgx.test(input);\r\n}\r\n\r\nexport function isValidInputLength(input) {\r\n    let arr = input.split(\"\");\r\n    return arr.length < 41;\r\n}\r\n","import axios from 'axios';\r\n\r\nasync function getArticles(keywords) {\r\n    const keywordsArr = keywords.join('+');\r\n    const res = await axios.get(`https://gnews.io/api/v4/search?q=${keywordsArr}&lang=en&max=9&token=4d4bd3ce04b4a34afe4a9f844557a845`);\r\n    return res.data;\r\n}\r\n\r\nexport default getArticles","import React from 'react'\r\n\r\nfunction Loader() {\r\n    return (\r\n        <div>\r\n            Loading....\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loader\r\n","import React, { useState, useEffect } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\r\nimport List from './List';\r\nimport { isValidCharacter, isValidInputLength } from './helpers/isValidKeyword';\r\nimport getArticles from './helpers/getArticles';\r\nimport sendData from './helpers/sendData';\r\nimport Loader from './Loader';\r\n\r\nfunction Search() {\r\n    const [articles, setArticles] = useState([]);\r\n    const [isFetching, setIsFetching] = useState(false);\r\n    const [keywords, setKeywords] = useState(\"\");\r\n    const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n    const search = async (e) => {\r\n        e.preventDefault();\r\n        setIsFetching(true);\r\n        if (keywords === \"\") {\r\n            setErrorMessage(\"Please enter your keywords!\");\r\n            setIsFetching(false);\r\n            return;\r\n        }\r\n        if (!isValidCharacter(keywords)) {\r\n            setErrorMessage(\"Invalid characters\");\r\n            setIsFetching(false);\r\n            return;\r\n        }\r\n        if (!isValidInputLength(keywords)) {\r\n            setErrorMessage(\"Input is too long\");\r\n            setIsFetching(false);\r\n            return\r\n        }\r\n        getArticles(keywords.split(\" \")).then(res => {\r\n            setErrorMessage(\"\");\r\n            setKeywords([]);\r\n            setArticles(res.articles);\r\n            setIsFetching(false);\r\n        }).catch(err => {\r\n            console.log(err);\r\n            setIsFetching(false);\r\n            setErrorMessage(\"There was a request error\");\r\n        });\r\n\r\n        sendData({ keywords }, 'search');\r\n\r\n    }\r\n    return (\r\n        <div className=\"articles-page\">\r\n            <div className=\"search-bar\">\r\n                <h2>Search for articles</h2>\r\n                {errorMessage !== \"\" && <h4 className=\"error-msg\">{errorMessage}</h4>}\r\n                <form action=\"\">\r\n                    <div className=\"input\">\r\n                        <input type=\"text\" placeholder=\"Type what you are looking for...\" onChange={e => setKeywords(e.target.value)} value={keywords} />\r\n                        <FontAwesomeIcon icon={faSearch} className=\"icon\" />\r\n                    </div>\r\n                    <button className=\"btn\" onClick={search}>Search</button>\r\n\r\n                </form>\r\n            </div>\r\n            {isFetching && keywords !== \"\" ? <Loader /> : <List data={articles} />}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search\r\n","import './App.scss';\r\nimport Search from './components/Search';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <Switch>\r\n          <Route exact path=\"/search-app\">\r\n            <Search />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}